{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,mBACpCE,EAAYH,SAASC,cAAc,mBACnCG,EAAcJ,SAASC,cAAc,qBAG3C,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAKPR,EAAKgB,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAMN,IAJA,IAAIV,EAAQW,OAAOhB,EAAWiB,OACxBC,EAAOF,OAAOf,EAAUgB,OACxBE,EAASH,OAAOd,EAAYe,OAEzBG,EAAI,EAAGA,GAAKD,EAAQC,GAAG,EAC9BjB,EAAciB,EAAGf,GACdgB,MAAK,SAAAC,GAAWA,EAARlB,SAAekB,EAALjB,MACjBV,EAAA4B,OAAOC,QAAS,G,IAEjBC,OAAM,SAAAH,GAAWA,EAARlB,SAAekB,EAALjB,MAClBV,EAAA4B,OAAOG,QAAS,G,IAEpBrB,GAASa,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nconst firstDelay = document.querySelector('[name =\"delay\"]');\nconst delayStep = document.querySelector('[name = \"step\"]');\nconst amountInput = document.querySelector('[name = \"amount\"]');\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay })\n      }\n    }, delay);\n  });\n}\n\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  let delay = Number(firstDelay.value);\n  const step = Number(delayStep.value);\n  const amount = Number(amountInput.value);\n\n  for (let i = 1; i <= amount; i+=1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(``);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(``)\n      });\n    delay += step\n  }\n};"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","Number","value","step","amount","i","then","param","Notify","success","catch","failure"],"version":3,"file":"03-promises.de727515.js.map"}